package chap03.ex02;

public class BitWiseOper2 {

	public static void main(String[] args) {
		// 비트 연산자 : &(AND), |(OR), ^(XOR), ~(NOT)
			// -> 모든 수를 2진법으로 계산

		// &(AND) 연산 : 0 & 0 = 0, 0 & 1 = 0, 1 & 0 = 0, 1 & 1 = 1  
					// 모든 비트가 1일 때만 1
		
		System.out.println( 3 & 10 ); // 2
		
		/*
		 * 3  = 0011(2)
		 * 10 = 1010(2)
		 * AND ----------------------------
		 *      0010(2) = 2
		 */
		
		// |(OR) 연산 : 0 | 0 = 0, 0 | 1 = 1, 1 | 0 = 1, 1 | 1 = 1
					// 둘 중 하나만 1이어도 1
		
		System.out.println( 3 | 10 ); // 11 
		
		/*
		 * 3  = 0011(2)
		 * 10 = 1010(2)
		 * OR ----------------------------
		 *      1011(2) = 11
		 */

		// ^(XOR) 연산 : 0 ^ 0 = 0, 0 ^ 1 = 1, 1 ^ 0 = 1, 1 ^ 1 = 0  
					 // 두 비트가 같을 때 : 0, 다를 때 1
		
		System.out.println( 3 ^ 10 ); // 9
		
		/*
		 * 3  = 0011(2)
		 * 10 = 1010(2)
		 * XOR ----------------------------
		 *      1001(2) = 9
		 */
		
		// ~(NOT) 연산 : 0일 때 1, 1일 때 0
		
		System.out.println( ~3 ); // -4 
	
		/*
		 * 3  = 0011(2) -> 부호를 나타내는 비트 존재함(32비트 표현), 2의 보수
		 * 							10011과 동일
		 * NOT ----------------------------
		 *      1100(2) = 	 		01100(2) = -4		
		 */
	}

}
